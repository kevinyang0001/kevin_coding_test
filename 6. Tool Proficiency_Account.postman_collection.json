{
	"info": {
		"_postman_id": "bd0fbced-9b84-41a6-b69d-7ce6740bb19d",
		"name": "Account Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10713584"
	},
	"item": [
		{
			"name": "Create Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"// Check whether the status code is 200",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Check if the username field returns valid response",
							"pm.test(\"Validate username field\", function () {",
							"    pm.expect(jsonData.username).to.eql(\"qa_account_001\");",
							"});",
							"",
							"// Check if the password field returns valid response",
							"pm.test(\"Validate username field\", function () {",
							"    pm.expect(jsonData.password).to.eql(\"Aaa12345!\");",
							"});",
							"",
							"// Check if the email field returns valid response",
							"pm.test(\"Validate email field\", function () {",
							"    pm.expect(jsonData.email).to.eql(\"qa_account_001@gmail.com\");",
							"});",
							"",
							"// Check if the newsletter field returns valid response",
							"pm.test(\"Validate newsletter field\", function () {",
							"    pm.expect(jsonData.newsletter).to.be.true;",
							"});",
							"",
							"// Check whether we have expected keys",
							"pm.test(\"Response including key\", function() {",
							"    pm.expect(jsonData).to.have.keys('access_token');",
							"});",
							"",
							"// Store access_token",
							"pm.test(\"Update Global variable ACCESS_TOKEN\", function() {",
							"    pm.environment.set(\"ACCESS_TOKEN\", jsonData[\"access_token\"]);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "api-key",
						"value": "f8786d596a570f903202f8eb96c91132684f38a3",
						"description": "unique api key",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "qa_account_001",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Aaa12345!",
							"type": "text"
						},
						{
							"key": "email",
							"value": "qa_account_001@gmail.com",
							"type": "text"
						},
						{
							"key": "newsletter",
							"value": "true",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://13.209.85.69/user/account/v1/create",
					"protocol": "https",
					"host": [
						"13",
						"209",
						"85",
						"69"
					],
					"path": [
						"user",
						"account",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"// Check whether the status code is 200",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "api-key",
						"value": "f8786d596a570f903202f8eb96c91132684f38a3",
						"description": "unique api key",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "qa_account_001",
							"type": "text"
						},
						{
							"key": "email",
							"value": "qa_account_001@gmail.com",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://13.209.85.69/user/account/v1/delete",
					"protocol": "https",
					"host": [
						"13",
						"209",
						"85",
						"69"
					],
					"path": [
						"user",
						"account",
						"v1",
						"delete"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"// Check whether the status code is 200",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Check if the username field returns valid response",
							"pm.test(\"Validate username field\", function () {",
							"    pm.expect(jsonData.username).to.eql(\"qa_account_001\");",
							"});",
							"",
							"// Check if the password field returns valid response",
							"pm.test(\"Validate username field\", function () {",
							"    pm.expect(jsonData.password).to.eql(\"Aaa12345!\");",
							"});",
							"",
							"// Check if the email field returns valid response",
							"pm.test(\"Validate email field\", function () {",
							"    pm.expect(jsonData.email).to.eql(\"qa_account_001@gmail.com\");",
							"});",
							"",
							"// Check if the newsletter field returns valid response",
							"pm.test(\"Validate newsletter field\", function () {",
							"    pm.expect(jsonData.newsletter).to.be.false;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "api-key",
						"value": "f8786d596a570f903202f8eb96c91132684f38a3",
						"description": "unique api key",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "qa_account_001",
							"type": "text"
						},
						{
							"key": "email",
							"value": "qa_account_001@gmail.com",
							"type": "text"
						},
						{
							"key": "newsletter",
							"value": "false",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://13.209.85.69/user/account/v1/update",
					"protocol": "https",
					"host": [
						"13",
						"209",
						"85",
						"69"
					],
					"path": [
						"user",
						"account",
						"v1",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"// Check whether the status code is 200",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Check if the username field returns valid response",
							"pm.test(\"Validate username field\", function () {",
							"    pm.expect(jsonData.username).to.eql(\"qa_account_001\");",
							"});",
							"",
							"// Check if the password field returns valid response",
							"pm.test(\"Validate username field\", function () {",
							"    pm.expect(jsonData.password).to.eql(\"Aaa12345!\");",
							"});",
							"",
							"// Check if the email field returns valid response",
							"pm.test(\"Validate email field\", function () {",
							"    pm.expect(jsonData.email).to.eql(\"qa_account_001@gmail.com\");",
							"});",
							"",
							"// Check if the newsletter field returns valid response",
							"pm.test(\"Validate newsletter field\", function () {",
							"    pm.expect(jsonData.newsletter).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "api-key",
						"value": "f8786d596a570f903202f8eb96c91132684f38a3",
						"description": "unique api key",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "https://13.209.85.69/user/account/v1/read",
					"protocol": "https",
					"host": [
						"13",
						"209",
						"85",
						"69"
					],
					"path": [
						"user",
						"account",
						"v1",
						"read"
					]
				}
			},
			"response": []
		}
	]
}